# src/database.py
"""Database connection and session management using SQLAlchemy asyncpg."""

# --- –ò–º–ø–æ—Ä—Ç—ã ---
import os
import sys

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è lifespan
from contextlib import asynccontextmanager

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ .env
from dotenv import load_dotenv

# --- –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –¥–ª—è FastAPI ---
from fastapi import FastAPI  # <-- –î–æ–±–∞–≤—å —ç—Ç—É —Å—Ç—Ä–æ–∫—É

# --- –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è SQLAlchemy –∏ asyncpg ---
from sqlalchemy.ext.asyncio import AsyncEngine, AsyncSession, create_async_engine
from sqlalchemy.orm import sessionmaker
from sqlalchemy.pool import AsyncAdaptedQueuePool

from alembic import command
from alembic.config import Config

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
# –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ .env —Ñ–∞–π–ª—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ (src/)
# –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –æ—Ç–∫—É–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å–∫—Ä–∏–ø—Ç
dotenv_path = os.path.join(os.path.dirname(__file__), "..", ".env")
# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª .env, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
load_dotenv(dotenv_path)

# --- Configuration ---
DATABASE_URL = os.getenv("DATABASE_URL")

if not DATABASE_URL:
    # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å –∏–ª–∏ –≤—ã–≤–µ–¥–µ–º –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—É—é –æ—à–∏–±–∫—É
    alt_path = os.path.abspath(dotenv_path)
    print(
        f"Warning: DATABASE_URL not found in environment. Looked in .env at: {alt_path}"
    )
    # –ú–æ–∂–Ω–æ –±—Ä–æ—Å–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ URL –∫—Ä–∏—Ç–∏—á–µ–Ω
    # raise ValueError("DATABASE_URL environment variable is not set.")

print(f"‚úÖ .env file loaded from: {dotenv_path}")
print(f"üîç DATABASE_URL from environment: {'SET' if DATABASE_URL else 'NOT SET'}")
# print(f"üîç DATABASE_URL value: {DATABASE_URL}") # –û—Å—Ç–æ—Ä–æ–∂–Ω–æ: –≤—ã–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å!

# --- Engine and Session Factory ---
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥—Ä–∞–π–≤–µ—Ä
if DATABASE_URL and not DATABASE_URL.startswith("postgresql+asyncpg://"):
    raise ValueError(
        "Expected DATABASE_URL to start with 'postgresql+asyncpg://' for asyncpg driver."
    )

# –°–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫ SQLAlchemy
engine = create_async_engine(
    DATABASE_URL,
    echo=False,  # –£—Å—Ç–∞–Ω–æ–≤–∏ True –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
    poolclass=AsyncAdaptedQueuePool,  # –•–æ—Ä–æ—à–∏–π –ø—É–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è asyncpg
    pool_pre_ping=True,  # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
    pool_recycle=3600,  # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 60 –º–∏–Ω—É—Ç
)

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–±—Ä–∏–∫—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π
# –ò—Å–ø–æ–ª—å–∑—É–µ–º expire_on_commit=False, —á—Ç–æ–±—ã –æ–±—ä–µ–∫—Ç—ã –Ω–µ –∏—Å—Ç–æ—â–∞–ª–∏—Å—å –ø–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞
AsyncSessionFactory = sessionmaker(engine, class_=AsyncSession, expire_on_commit=False)

# --- Base –¥–ª—è –º–æ–¥–µ–ª–µ–π ---
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–µ–ª–µ–π –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è engine
# –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö
from sqlalchemy.orm import declarative_base

Base = declarative_base()

# --- Lifespan –¥–ª—è FastAPI ---
# (–£–±–µ–¥–∏—Å—å, —á—Ç–æ FastAPI –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤—ã—à–µ)


@asynccontextmanager
async def lifespan(app: FastAPI):  # <-- –¢–µ–ø–µ—Ä—å FastAPI –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
    # –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("Application startup: Connecting to database and running migrations...")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ Alembic
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ø—É—Å—Ç–∏—Ç—å `alembic upgrade head`
    try:
        # –ü—É—Ç—å –∫ alembic.ini –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
        # –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø—É—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è src/database.py
        alembic_ini_path = os.path.join(os.path.dirname(__file__), "..", "alembic.ini")
        if os.path.exists(alembic_ini_path):
            alembic_cfg = Config(alembic_ini_path)
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            # command.upgrade(alembic_cfg, "head")
            # print("Alembic migrations applied.")
            pass  # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
        else:
            print(
                f"Warning: alembic.ini not found at {alembic_ini_path}. Skipping migration check."
            )
    except Exception as e:
        print(f"Warning: Could not apply migrations on startup: {e}")
    yield
    # –ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("Application shutdown.")


# --- Dependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ ---
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
from typing import AsyncGenerator


async def get_db_session() -> AsyncGenerator[AsyncSession, None]:
    """Dependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ –ë–î –≤ FastAPI endpoints.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å `Depends(get_db_session)`.
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ–∑–¥–∞–Ω –ª–∏ engine
    if not AsyncSessionFactory:
        raise RuntimeError("Database engine is not configured. Check DATABASE_URL.")

    async with AsyncSessionFactory() as session:
        try:
            # –ü–µ—Ä–µ–¥–∞–µ–º —Å–µ—Å—Å–∏—é –≤ —ç–Ω–¥–ø–æ–∏–Ω—Ç
            yield session
        except Exception:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            await session.rollback()
            raise
        finally:
            # –í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
            await session.close()
